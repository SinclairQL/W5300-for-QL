#include "socket_h"

/*Type field of Query and Answer */
#define T_A 1 /* host address */
#define T_NS 2 /* authoritative server */
#define T_CNAME 5 /* canonical name */
#define T_SOA 6 /* start of authority zone */
#define T_PTR 12 /* domain name pointer */
#define T_MX 15 /* mail routing information */
#define UDP_MSG_BUF_SIZE 2048 /* UDP message buffer size */

/*Function Declarations */
uint32 ngethostbyname (char*);
void initW5300();
extern void initialize_cache();
extern unsigned long get_from_cache( char * );
extern void store_in_cache( char * , unsigned long );

struct dns_cache_entry {
	unsigned long address;
	unsigned long refcount;
	char * hostname;
};

/*DNS header structure */
struct DNS_HEADER
{
	int rcode:4; /* response code */
	int cd:1; /* checking disabled */
	int ad:1; /* authenticated data */
	int z:1; /* its z! reserved */
	int ra:1; /* recursion available */
	int rd:1; /* recursion desired */
	int tc:1; /* truncated message */
	int aa:1; /* authoritive answer */
	int opcode:4; /* purpose of message */
	int qr:1; /* query/response flag */
	int id:16; /* identification number */
	unsigned short q_count; /* number of question entries */
	unsigned short ans_count; /* number of answer entries */
	unsigned short auth_count; /* number of authority entries */
	unsigned short add_count; /* number of resource entries */
};

/*Constant sized fields of query structure */
struct QUESTION
{
	unsigned char qtype_h;
	unsigned char qtype_l;
	unsigned char qclass_h;
	unsigned char qclass_l;
};

/*Constant sized fields of the resource record structure */
struct R_DATA
{
	unsigned short type;
	unsigned short _class;
	unsigned int ttl;
	unsigned short data_len;
};

/*Pointers to resource record contents */
struct RES_RECORD
{
	unsigned char *name;
	struct R_DATA *resource;
	char *rdata;
};

/*Structure of a Query */
typedef struct
{
	char *name;
	struct QUESTION *ques;
} QUERY;
